
#include <stack>
//cpp版本   先加上  头文件


int partition(Map * pool[], int low, int high)
{
	Map * star=pool[low];
	int v = pool[low]->linkid;
	while (low < high)
	{
		while (low < high && pool[high]->linkid >= v) high--;
		pool[low] = pool[high];
		while (low < high && pool[low]->linkid <= v) low++;
		pool[high] = pool[low];
	}
	pool[low] = star;
	return low;

}

void quickSort(Map * pool[], int p, int q)
{
	stack<int> st;
	int j;
	do {
		while (p < q)
		{
			j = partition(pool, p, q);
			if ((j - p) < (q - j))
			{
				st.push(j + 1);
				st.push(q);
				q = j - 1;
			}
			else
			{
				st.push(p);
				st.push(j - 1);
				p = j + 1;
			}
		}
		if (st.empty()) return;
		q = st.top(); st.pop();
		p = st.top(); st.pop();
	} while (1);
}